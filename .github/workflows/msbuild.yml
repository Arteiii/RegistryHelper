name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up MSVC
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Build .lib file
      run: |
        msbuild /p:Configuration=Release /t:RegistryHelper /p:Platform=x64 RegistryHelper.sln

    - name: Upload to Release
      uses: actions/upload-artifact@v2
      with:
        name: lib-artifact
        path: |
          RegistryHelper/RegistryHelper.h
          x64/Release/RegistryHelper.lib
          x64/Release/RegistryHelper.pdb

  release:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Git
      run: git fetch --tags

    - name: Display release version
      run: |
        echo "Release version: ${{ env.TAG }}"

    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: lib-artifact
        path: x64/Release

    - name: Generate SHA256 hashes
      id: hashes
      run: |
        cd "${GITHUB_WORKSPACE}/x64/Release"
        hashes=""
        for file in *; do
          file_name=$(basename "$file")
          hash_value=$(sha256sum "$file" | cut -d' ' -f1)
          hashes="${hashes}${file_name}:<br /> \`\`\`${hash_value}\`\`\` <br />"
        done
        echo "::set-output name=hashes::${hashes}"

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.TAG }}
        name: "Release ${{ env.TAG }}"
        body: |
          ## File Hashes:
          ${{ steps.hashes.outputs.hashes }}
        files: |
          x64/Release/*
        token: ${{ secrets.GITHUB_TOKEN }}
        append_body: true
