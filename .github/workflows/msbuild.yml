name: Build and Release

on:
  push:
    branches:
      - workflowTest

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up MSVC
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Build .lib file
      run: |
        msbuild /p:Configuration=Release /t:RegistryHelper /p:Platform=x64 RegistryHelper.sln

    - name: Upload to Release
      uses: actions/upload-artifact@v2
      with:
        name: lib-artifact
        path: |
          x64/Release/RegistryHelper.lib
          x64/Release/RegistryHelper.pdb

  release:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Git
      run: git fetch --tags

    - name: Get the latest tag
      id: get_tag
      run: |
        latest_tag=$(git tag -l --sort=-v:refname | head -n 1)
        if [ -z "$latest_tag" ]; then
          latest_tag="v0.1.0"  # Fallback tag if no tags exist
        fi
        echo "Latest tag: $latest_tag"
        echo "TAG=$latest_tag" >> $GITHUB_ENV
        
    - name: Display release version
      run: |
        echo "Release version: ${{ env.TAG }}"

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_tag.outputs.tag }}
        files: |
          x64/Release/*

    - name: Comment on Release
      run: |
        echo "Release version: ${{ env.TAG }}" > release_message.txt
        cat release_message.txt
      env:
        RELEASE_VERSION: ${{ env.TAG }}

    - name: Comment on Release
      run: |
        gh release upload ${{ github.repository }} ${{ steps.create_release.outputs.id }} release_message.txt --title "Release Notes"
